plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

//Carregar informações do código de versão dentro do arquivo versionCode.properties
def versionPropsFile = file('versionCode.properties')
def Properties versionCodeProps = new Properties()

if (versionPropsFile.canRead()) {
    versionCodeProps.load(new FileInputStream(versionPropsFile))
}
else {
    versionCodeProps['VERSION_CODE_DEVELOP']='0'
    versionCodeProps['VERSION_CODE_PRODUCTION']='0'
}

// Incrementando os valores das variáveis obtidas
def codeDevelop = versionCodeProps['VERSION_CODE_DEVELOP'].toInteger() + 1
def codeProduction = versionCodeProps['VERSION_CODE_PRODUCTION'].toInteger() + 1

println "codeDevelop: ${codeDevelop}"
println "codeProduction: ${codeProduction}"

versionCodeProps['VERSION_CODE_DEVELOP']=codeDevelop.toString()
versionCodeProps['VERSION_CODE_PRODUCTION']=codeProduction.toString()

def versionNamePropsFile = rootProject.file("versionName.properties")
def versionNameProps = new Properties()
versionNameProps.load(new FileInputStream(versionNamePropsFile))

println "versionName: v${versionNameProps['VERSION_NAME']}"

android {
    compileSdk 31

    // Recuperar a task que está sendo executada e realizado uma verificação
    // somente para salvar as variáveis incrementada do versionCode quando
    // for realizado um build para gerar um novo bundle
    def runTasks = gradle.startParameter.taskNames
    if (':app:bundleDevelopRelease' in runTasks || ':app:bundleProductionRelease' in runTasks) {
        versionCodeProps.store(versionPropsFile.newWriter(), null)
    }

    defaultConfig {
        applicationId "com.sample.handsoncodemagic"
        minSdk 24
        targetSdk 31
        versionCode 1
        versionName "v$versionNameProps['VERSION_NAME']"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

   /* signingConfigs {
        develop {
            storeFile file('D:\\Development\\HandsOnCodeMagic\\keystore\\key_story.jks')
            storePassword '667624'
            keyPassword '667624'
            keyAlias 'key0'
        }
        production {
            storeFile file('D:\\Development\\HandsOnCodeMagic\\keystore\\key_story.jks')
            storePassword '667624'
            keyPassword '667624'
            keyAlias 'key0'
        }
    }*/

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "production"
    productFlavors {
        production {
            versionCode codeProduction
            dimension "production"
            applicationIdSuffix '.production'
            versionNameSuffix ' - production'
           // signingConfig signingConfigs.production
        }
        develop {
            versionCode codeDevelop
            dimension "production"
            applicationIdSuffix '.develop'
            versionNameSuffix ' - develop'
            //signingConfig signingConfigs.develop
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.0'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
